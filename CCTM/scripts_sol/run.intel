#!/bin/csh
#> don't use #!/bin/csh -f --you lose the module comman

#PBS -N REL_may21
#PBS -q mod3dev
# BS -q amadtest
# BS -q workq
# BS -q singlepe
# BS -W group_list=mod3eval
# BS -q mod3eval
#PBS -l nodes=8:ppn=8:nehalem
# BS -l nodes=4:ppn=8:nehalem
# BS -l nodes=2:ppn=8:nehalem
# BS -l nodes=1:ppn=8:nehalem
# BS -l nodes=1:ppn=16:sandybridge
# BS -l nodes=2:ppn=16:sandybridge
# BS -l nodes=1:ppn=1
# BS -l walltime=72:00:00
# BS -l walltime=24:00:00
#PBS -l walltime=8:00:00
# BS -l walltime=4:00:00
# BS -l walltime=1:00:00
#PBS -j oe
# BS -o /home/yoj/src/cmaqv51/run

# 72 hours should be enough to run 23 days

 if ( $?PBS_JOBID ) then
    echo Job ID is $PBS_JOBID
    echo Queue is $PBS_O_QUEUE
    echo Host is $PBS_O_HOST
    echo Nodefile is $PBS_NODEFILE
    cat $PBS_NODEFILE | pr -o5 -4 -t
#> Switch to the working directory; by default PBS launches processes from your home directory.
    echo Working directory is $PBS_O_WORKDIR
    cd $PBS_O_WORKDIR
 endif
 echo '>>>>>> start model run at ' `date`

 limit stacksize unlimited

 set echo

 @ NPCOL =  8; @ NPROW =  8
#@ NPCOL =  4; @ NPROW =  8
#@ NPCOL =  2; @ NPROW = 32
#@ NPCOL = 32; @ NPROW =  2
#@ NPCOL =  2; @ NPROW = 16
#@ NPCOL =  2; @ NPROW =  8
#@ NPCOL =  1; @ NPROW =  8
#@ NPCOL =  1; @ NPROW =  1
 @ NPROCS = $NPCOL * $NPROW
 setenv NPCOL_NPROW "$NPCOL $NPROW"

#> ##### begin user define area #####
 set start_year     = 2011
 set end_year       = 2011
 set start_month    = 5 
 set end_month      = 5
 set start_day      = 21
 set end_day        = 21         # include the end day
#set end_day        = 22         # include the end day
 set cycle          = 000000
 set firstday       = 20110521

#set    domain      = US1     # (eus, ca, hemi)
 set    domain      = us_doe
 set    version     = 51beta

#set    INPUT       = /work/MOD3EVAL/css/CMAQ_Twoway/input       # misc input data path
#set    INPUT       = /work/MOD3EVAL/wtt/CMAQ_v51_Dev/misc
 set    INPUT       = /work/MOD3EVAL/wtt/DISCOVER_AQ/input  # misc input data path
#set    INPUT_Beis  = /work.old/MOD3DEV/ezv/GI/BEIS   # main emission and icbc data path
 set    INPUT_Beis  = /work/MOD3DEV/yoj/data          # main emission and icbc data path

#set    ic_path     = /work/MOD3EVAL/css/MACC/icbcs
#set    ic_path     = /work/MOD3EVAL/wtt/CMAQ_v51_Dev/icbc/2011
#set    ic_path     = /work/MOD3EVAL/dkj/Kansas/icbc
 set    ic_path     = /home/sjr/dev/cmaqv51/data/icon
#set    ic_path     = /work/MOD3EVAL/wtt/icbc/12km/35L/profile
#set    ic_path     = /home/nsu/work/cmaq51/output/output_US1_v51beta_2011_Stream1
#set    ic_path     = /work/MOD3DEV/yoj/data/
#set    bc_path     = $ic_path
#set    bc_path     = /work/MOD3EVAL/wtt/CMAQ_v51_Dev/icbc/2011
#set    bc_path     = /work/MOD3DEV/yoj/data    # from hutz
#set    bc_path     = /work/MOD3EVAL/css/MACC/icbcs
 set    bc_path     = /work/MOD3EVAL/wtt/CMAQ_v51_Dev/icbc/2011

 set    OCEANpath   = $INPUT
 set    COT         = $INPUT
 set    HFOR        = /work/MOD3DEV/hforouta/cmaq/devDust/modis
#set    NML         = /home/yoj/src/dev/BLD_back1
#setenv OMI           $INPUT/OMI.dat
#setenv OMI           /work/MOD3EVAL/wtt/DISCOVER_AQ/SJV/misc/OMI.dat
 set    OUTPUT_ROOT = /work/MOD3DEV/yoj/data/cmaq52

 setenv IOAPI_OFFSET_64 Y   # netCDF timestep-records > 2GB

#> CMAQ model setup
#set SPC_LIST = ( NO2 NO O3 NO3 OH HO2 N2O5 HNO3 HONO PNA H2O2 C2O3 CRO FORM ALD2 ALDX PAR CO PAN PANX OLE ETH IOLE TOL OPAN CRON CRNO ISOP  TERP SO2 SULF ETOH ETHA BENZENE SESQ ASO4J ASO4I ANH4J ANH4I ANO3J ANO3I AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J ATRP1J ATRP2J AISO1J AISO2J ASQTJ AORGCJ APOCJ APOCI APNCOMJ APNCOMI AECJ AECI AOTHRJ AOTHRI AFEJ AALJ ASIJ ATIJ ACAJ AMGJ AKJ AMNJ ACORS ASOIL AH2OJ AH2OI ANAJ ANAI ACLJ ACLI ASEACAT ACLK ASO4K ANH4K ANO3K AH2OK AISO3J AOLGAJ AOLGBJ NH3)
#set SPC_LIST = ( "NO2 NO O3 NO3 ASO4J ASOIL ACORS NH3" )
#set SPC_LIST = ( "NO2 NO O3 NO3 NH3 ASO4J ASO4I ANH4J ANH4I ANO3J ANO3I AALK1J AALK2J AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J APAH1J APAH2J APAH3J ATRP1J ATRP2J AISO1J AISO2J ASQTJ AORGCJ APOCJ APOCI APNCOMJ APNCOMI AECJ AECI AOTHRJ AOTHRI AFEJ AALJ ASIJ ATIJ ACAJ AMGJ AKJ AMNJ ACORS ASOIL NUMATKN NUMACC NUMCOR SRFATKN SRFACC SRFCOR AH2OJ AH2OI AH3OPJ AH3OPI ANAJ ANAI ACLJ ACLI ASEACAT ACLK ASO4K ANH4K ANO3K AH2OK AH3OPK AISO3J AOLGAJ AOLGBJ" )
#set SPC_LIST = ( NO2 NO O3 NO3 OH HO2 N2O5 HNO3 HONO PNA H2O2 C2O3 CRO FORM ALD2 ALDX PAR CO PAN PANX OLE ETH IOLE TOL OPAN CRON CRNO ISOP  TERP SO2 SULF ETOH ETHA BENZENE SESQ ASO4J ASO4I ANH4J ANH4I ANO3J ANO3I AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J ATRP1J ATRP2J AISO1J AISO2J ASQTJ AORGCJ APOCJ APOCI APNCOMJ APNCOMI AECJ AECI AOTHRJ AOTHRI AFEJ AALJ ASIJ ATIJ ACAJ AMGJ AKJ AMNJ ACORS ASOIL AH2OJ AH2OI ANAJ ANAI ACLJ ACLI ASEACAT ACLK ASO4K ANH4K ANO3K AH2OK AISO3J AOLGAJ AOLGBJ NH3)

#set SPC_LIST = ( NO2 NO O3 NO3 OH HO2 N2O5 HNO3 HONO PNA H2O2 C2O3 CRO FORM ALD2 ALDX PAR CO PAN PANX OLE ETH IOLE TOL OPAN CRON CRNO ISOP  TERP SO2 SULF ETOH ETHA BENZENE SESQ AECI AECJ AXYL1J AXYL2J AXYL3J ATOL1J ATOL2J ATOL3J ABNZ1J ABNZ2J ABNZ3J AISO1J AISO2J AISO3J ATRP1J ATRP2J ASQTJ AALK1J AALK2J AORGCJ AOLGBJ AOLGAJ NUMATKN NUMACC NUMCOR SRFATKN SRFACC SRFCOR NH3)

#setenv CONC_SPCS "${SPC_LIST}" #If undefined, write out all species to CONC file

 set GC_LIST = ( NO2 NO NO3 N2O5 HNO3 HONO PNA O3 OH HO2 H2O2 CO C2O3 ALD2 ALDX PAR PAN PANX OLE IOLE TOL ISOP TERP ETH ETOH ETHA SO2 SULF HCL BENZENE SESQ )

 set ASO4 = ( ASO4I ASO4J ASO4K )
 set ANH4 = ( ANH4I ANH4J ANH4K )
 set ANO3 = ( ANO3I ANO3J ANO3K )
#> for non-vol POA ---------------------------
#set AOCIJ = ( AXYL1J AXYL2J AXYL3J \
#              ATOL1J ATOL2J ATOL3J \
#              ABNZ1J ABNZ2J ABNZ3J \
#              AISO1J AISO2J AISO3J \
#              ATRP1J ATRP2J ASQTJ \
#              AALK1J AALK2J \
#              AOLGAJ AOLGBJ AORGCJ \
#              APAH1J APAH2J APAH3J \
#              APOCI APOCJ )
#set AOCIJ = ( AISO1J AISO2J AISO3J \
#              AALK1J AALK2J \
#              AOLGAJ AOLGBJ AORGCJ \
#              APOCI APOCJ )
#set APNCOMIJ = ( APNCOMI APNCOMJ )
#> -------------------------------------------

#> for semivol POA ---------------------------
 set AOCIJ = ( AISO1J AISO2J AISO3J \
               AALK1J AALK2J \
               AOLGAJ AOLGBJ AORGCJ \
               ALVOO1I ALVOO2I ALVOO1J ALVOO2J )
#> -------------------------------------------

 set AECIJ    = ( AECJ AECI )
 set NUMSRF   = ( NUMATKN NUMACC NUMCOR \
                  SRFATKN SRFACC SRFCOR )
#> for non-vol POA ---------------------------
#set AE_LIST  = ( $ASO4 $ANH4 $ANO3 \
#                $AOCIJ $APNCOMIJ \
#                $AECIJ $NUMSRF )
#> -------------------------------------------
#> for semivol POA ---------------------------
 set AE_LIST  = ( $ASO4 $ANH4 $ANO3 \
                 $AECIJ $NUMSRF )
#> -------------------------------------------
 set NR_LIST = ( NH3 SV_SQT )
 setenv CONC_SPCS "${GC_LIST} ${AE_LIST} ${NR_LIST}"

 setenv AVG_CONC_SPCS "ALL"
 setenv ACONC_BLEV_ELEV " 1 1"  # layer range for integral average conc

#setenv CTM_MAXSYNC       300  # max sync time step (sec) [720]
 setenv CTM_MAXSYNC       600  # max sync time step (sec) [720]
#setenv CTM_MINSYNC       150  # min sync time step (sec) [60]
 setenv CTM_MINSYNC         1  # min sync time step (sec) [60]
#setenv SIGMA_SYNC_TOP    0.0  # top sigma level thru which sync step determined [0.7]
#setenv ADV_HDIV_LIM      0.95 # Maximum horiz. div. limit for adv step adjust [0.9]
 setenv CTM_ADV_CFL       0.95 # Max CFL [0.75]
 setenv REP_LAYER_MIN      -1  # Minimum layer for reporting plume rise info [-1]
#setenv RB_ATOL        1.0E-09 # global ROS3 solver abs tol (overide 1.0E-07 default)

 setenv PROMPTFLAG          F  # turn off I/O-API PROMPT*FILE interactive mode
#setenv CTM_CKSUM           N  # cksum report [Y]
#setenv KZMIN               N  # use Min Kz option in edyintb [Y], otherwise revert to Kz0UT
 setenv IOAPI_LOG_WRITE     F  # F = turn off excess WRITE3 logging [T]
 setenv FL_ERR_STOP         F  # stop on inconsistent input file [T]

 setenv CTM_ABFLUX          Y  # Pleim's ammonia bi-directional flux for inline deposition velocities [N]
#setenv CTM_MOSAIC          Y  # [N]
#setenv CTM_FST             Y  # Mosaic method to get land-use specific stomatal flux [N]
 setenv CTM_BIOGEMIS        Y  # use in-line biogenic emissions [N]
 setenv BIOSW_YN            N  # Using a frost date switch file [Y]
 setenv SUMMER_YN           N  # Use summer normalized emissions? [Y]
 setenv CTM_PT3DEMIS        Y  # use in-line plume rise emissions [N]
#setenv CTM_SFC_HONO        N  # Sarwar`s HONO interaction w/ leaf & building surfaces [Y]
#setenv CTM_GRAV_SETL       N  # vdiff aero grav. sedimentation [Y]
#setenv PX_VERSION          N  # MCIP is PX version? [Y]
#setenv ACONC_END_TIME      Y  # Override default beginning time timestamp for ACONC [N]
#setenv CTM_LTNG_NO         Y  # turn on lightning NOx [N]
 setenv CTM_WVEL            Y  # save derived vertical velocity component to conc file [N]
#setenv CTM_ILDEPV          N  # inline deposition velocities [Y]
#setenv CTM_WB_DUST         N  # windblown dust [Y]
 setenv CTM_ERODE_AGLAND    N  # use agricultural activity for windblown dust [Y]
                               # - env var ignored if CTM_WB_DUST is N
 setenv CTM_WBDUST_BELD BELD3

#> flags for diagnostic files
#setenv CLD_DIAG            Y  # cloud diagnostic file [N]
#setenv CTM_AERDIAG         Y  # aerosol diagnostic file [N]
#setenv CTM_SSEMDIAG        Y  # sea-salt emissions diagnostic file [N]
#setenv CTM_DEPV_FILE       Y  # diagnostic file for deposition velocities [N]
#setenv VDIFF_DIAG_FILE     Y  # diag. files for vdiff & possibly aero grav. sedimentation [N]
#setenv B3GTS_DIAG          Y  # beis mass emissions diagnostic file [N]
#setenv PT3DDIAG            Y  # optional 3d point source emissions diagnostic file [N]
#setenv PT3DFRAC            Y  # optional layer fractions diagnostic (play) file(s) [N]
 setenv CTM_DUSTEM_DIAG     Y  # windblown dust emissions diagnostic file [N]
                               # - env var ignored if CTM_WB_DUST is N
#setenv CTM_AOD             Y  # AOD diagnostic file [N]
#setenv LTNGDIAG            Y  # diagnostic file [N]
#setenv CTM_PHOTDIAG        Y  # photolysis rate diagnostic [N]

#> new flags for AeroSprint
#setenv CTM_AVISDIAG        Y  # diagnostic file [N]
 setenv CTM_PMDIAG          N  # not really a diagnostic file [Y]
#setenv CTM_APMDIAG         Y  # diagnostic file [N]
#setenv APMDIAG_BLEV_ELEV " 1 3"  # layer range for average pmdiag
 setenv APMDIAG_BLEV_ELEV ""      # layer range for average pmdiag = NLAYS
#setenv AVG_FILE_ENDTIME    Y

 setenv CTM_PROCAN          Y  # use process analysis [N]
#> process analysis global column, row and layer ranges
#>>> user must check GRIDDESC for validity!
 setenv PA_BCOL_ECOL "10 320"
 setenv PA_BROW_EROW "10 195"
 setenv PA_BLEV_ELEV "1  4"

# MPI tuning
 setenv MPI_SM_POOL          16000  # increase shared memory pool in case many MPI_SEND headers
 setenv MP_EAGER_LIMIT       65536  # set MPI message passing buffer to max
 setenv MP_SINGLE_THREAD       yes  # tell mpi threading is not done
 setenv MP_STDOUTMODE      ordered  # order stnd out msgs
 setenv MP_LABELIO yes
 setenv MP_SHARED_MEMORY       yes  # avoid using interconnect switch if on same node
 setenv MP_ADAPTER_USE      shared  # additional tuning
 setenv MP_CPU_USE        multiple  # additional tuning
 setenv MP_CSS_INTERRUPT       yes  # additional tuning

# ##### end user define area #####

 set output_direct_name = CMAQ_restruct_test_2011_1  #

# ----- CMAQ -----

 set compiler =  intel 
 set bld_os   = "`/bin/uname -s``/bin/uname -r | cut -d. -f1`"
 set system   = "`/bin/uname -i`"
 set EXEC_ID  = ${bld_os}_${system}${compiler}

 set BASE     = /home/yoj/src/cmaqv51/run
 set MECH     = cb05e51_ae6_aq
#set MECH     = cb05e51_ae6nvPOA_aq
#set MECH     = cb6r3_ae6_aq
 set APPL     = v52_restruct   # IPR

 set CFG      = $APPL
 set EXEC     = CCTM_${CFG}
 set REPO     = /home/yoj/src/repo/restruct/CMAQ_Dev_Restruct/CCTM/src
 set OCK      = $BASE/outck.q

 setenv OMI $REPO/phot/inline/OMI_1979_to_2015.dat

#> display the model executable id
 setenv EXECUTION_ID `/bin/ls -l $XBASE/$EXEC | cut -c14-`
 echo $EXECUTION_ID; size $XBASE/$EXEC
#set NML      = $XBASE
 set NML      = $REPO/MECHS/$MECH

 set year     = $start_year
 @ pre_year   = $year - 1
 @ cur_year   = $year
 @ yr         = $year
 @ start_hour = $cycle / 10000
 @ end_hour   = ($start_hour + 23) % 24

 module load intel/13.1 impi/4.1.0.024 netcdf-4.3.0/intel-13.1
#module load intel/13.1 openmpi-1.8.1/intel-13.1 netcdf-4.3.0/intel-13.1
#module load intel/13.1 impi/4.1.0.024 netcdf-4.3.0/intel-13.1 totalview/8.15
 set MPI = /usr/local/apps/intel/impi/4.1.0.024/intel64/bin
#     set MPI = /usr/local/apps/openmpi-1.8.1/intel-13.1/bin
#module load intel/15.0 impi/5.0.1.035 netcdf-4.3.2/intel-15.0
#set MPI = /usr/local/apps/intel/impi/5.0.1.035/intel64/bin

#module load intel/15.0 impi/4.1.0.024 netcdf-4.3.2/intel-15.0
#set MPI = /usr/local/apps/intel/impi/4.1.0.024/intel64/bin
#module load intel/15.0 impi/5.0.1.035 netcdf-4.1.2/intel-15.0
#set MPI = /usr/local/apps/intel/impi/5.0.1.035/intel64/bin

#> loop through simulation period
 @ cur_year = $cur_year - 1
 while ( $cur_year < $end_year )

  @ cur_year++

  if ( ( $cur_year % 4 ) != 0 ) then
     set leap_year_cur_year = 0
  else if ( ( $cur_year % 400 ) == 0 ) then
     set leap_year_cur_year = 1     # leap year, nday = 29
  else if ( ( $cur_year % 100 ) == 0 ) then
     set leap_year_cur_year = 0
  else
     set leap_year_cur_year = 1     # leap year, nday = 29
  endif

  if ( $leap_year_cur_year ) then
     set numday_cur_year = ( 31 29 31 30 31 30 31 31 30 31 30 31 )
     set leap_year_pre_year = 0
  else
     set numday_cur_year = ( 31 28 31 30 31 30 31 31 30 31 30 31 )
     if ( ( $pre_year % 4 ) != 0 ) then
        set leap_year_pre_year = 0
     else if ( ( $pre_year % 400 ) == 0 ) then
        set leap_year_pre_year = 1
     else if ( ( $pre_year % 100 ) == 0 ) then
        set leap_year_pre_year = 0
     else
        set leap_year_pre_year = 1
     endif
  endif

# set up the current and previous day in julian format
  if ( $cur_year == $start_year ) then
     @ cur_day_j = 0
     @ temp_month = 1
     while ( $temp_month < $start_month )
       @ cur_day_j = $cur_day_j + $numday_cur_year[$temp_month]
       @ temp_month++
     end
     @ cur_day_j = $cur_day_j + $start_day
     @ pre_day_j = $cur_day_j - 1
  else
     @ cur_day_j = 1
  endif

  if ( $cur_day_j == 1 ) then
     if ( $leap_year_pre_year ) then
        set pre_day_j = 366
     else
        set pre_day_j = 365
     endif
  endif

  if ( $cur_year == $start_year ) then
     @ cur_month = $start_month
  else
     @ cur_month = 1
  endif

  if ( $cur_year == $end_year ) then
     @ cur_end_month = $end_month
  else
     @ cur_end_month = 12
  endif

  @ cur_month = $cur_month - 1
  while ( $cur_month < $cur_end_month )
    @ cur_month++

    @ cur_day = 0
    @ cur_month_end_day = $numday_cur_year[$cur_month]
    if ( ( $cur_year == $start_year ) && ( $cur_month == $start_month ) ) then
       @ cur_day = $start_day - 1
    endif

    if ( ($cur_year == $end_year ) && ( $cur_month == $cur_end_month ) ) then
       @ cur_month_end_day = $end_day
    endif

    while ( $cur_day < $cur_month_end_day )

      @ cur_day++
      set loc_pre_year = $cur_year

      if ( $cur_day == 1 ) then
         @ pre_month = $cur_month - 1
         if ( $pre_month == 0 ) then
            set pre_month = 12
            @ loc_pre_year = $cur_year - 1
         endif
         set yest = $numday_cur_year[$pre_month]
         set yesterday = `printf "%d%2.2d%2.2d\n" $loc_pre_year $pre_month $yest`
      else
         @ yest = $cur_day - 1
         set yesterday = `printf "%d%2.2d%2.2d\n" $loc_pre_year $cur_month $yest`
      endif

      set today       = `printf "%d%2.2d%2.2d\n" $cur_year $cur_month $cur_day` # beginning date, yyyymmdd
      set today_j     = `printf "%d%3.3d\n" $cur_year $cur_day_j`               # beginning Julian date, yyyyxxx
      set yesterday_j = `printf "%d%3.3d\n" $loc_pre_year $pre_day_j`
      set MONTH       = `printf "%2.2d\n" $cur_month` # mm
      set DAY         = `printf "%2.2d\n" $cur_day` # dd

      if ( $today == $firstday ) then
         if ( ! -d $OUTPUT_ROOT/$output_direct_name ) then
            mkdir -p $OUTPUT_ROOT/$output_direct_name
            if ( $status != 0 ) then
              echo "Failed to make work directory, $OUTPUT_ROOT/$output_direct_name"
              exit 1
            endif
         endif

      endif

#     set echo

      mkdir $OUTPUT_ROOT/$output_direct_name/$today

      set STDATE = $today_j      # beginning date in julian format
      set STTIME = $cycle        # beginning GMT time (HHMMSS)
      set NSTEPS = 240000        # time duration (HHMMSS) for this run
#     set NSTEPS = 030000        # time duration (HHMMSS) for this run
      set TSTEP  = 010000        # output time step interval (HHMMSS)
#     set TSTEP  = 000345        # output time step interval (HHMMSS)

#> set additional parallel log and output file name extension
      if ( $?PBS_JOBID ) then
         setenv CTM_APPL ${CFG}_${today}_$PBS_JOBID:r
         setenv OUT_APPL ${today}_$PBS_JOBID:r
      else
         setenv CTM_APPL ${CFG}_${today}_$$
         setenv OUT_APPL ${today}_$$
      endif
#     setenv CTM_NEXT ${CFG}_${today}   # output file potentially used for next run
      setenv CTM_NEXT ${today}...$PBS_JOBID:r   # output file used for next run

#     set emis_path1 = /work/MOD3EVAL/wtt/emis/2011/2011ed_cmaq51/12US1/cmaq_cb05_soa 
#     set emis_path2 = $emis_path1/inline
      set emis_path1 = /work/MOD3EVAL/nsu/emis/2011eh/12US1/cmaq_cb05e51

#> meteorology input directory 
      if ( ${year} == 2010 ) then
        set METpath = /work/MOD3EVAL/wtt/WRF_2011_35aL/12US1_wetlands100/mcip_out_ghrsst
	set met_year = 10
      else
#       set METpath = /work/MOD3EVAL/wtt/WRF_2011_35aL/12US1_wetlands100/mcip_out_ghrsst
        set METpath = /work/MOD3EVAL/nsu/met/2011
	set met_year = 11
      endif

#> horizontal grid defn
      setenv GRIDDESC /work/MOD3EVAL/css/CMAQ_Twoway/input/GRIDDESC
      setenv GRID_NAME WRF_CMAQ_2WAY
#     setenv GRIDDESC /work/MOD3DEV/yoj/ptmp/GRIDDESC01_sjr   # Ca window
#     setenv GRID_NAME M_SCAM_12KM                            # Ca window

#> remove existing output files?
#     set DISP = delete
#     set DISP = update
      set DISP = keep

      set OUTDIR = $OUTPUT_ROOT/$output_direct_name   # output files and directories

#> Inline Process Analysis (PACM = Process Analysis Control Module)
      set procanon = 0
      if ( $?CTM_PROCAN ) then   # $CTM_PROCAN is defined
         if ( $CTM_PROCAN == 'Y' || $CTM_PROCAN == 'T' ) set procanon = 1
      endif
      if ( $procanon ) then
         setenv PACM_INFILE /home/yoj/src/dev/procan/run/pacp.inp.IPR
         setenv PACM_REPORT $OUTDIR/"PA_REPORT".${OUT_APPL}
      endif

#> sedi diagnostics
      set vdfdiagon = 0
      if ( $?VDIFF_DIAG_FILE ) then   # $VDIFF_DIAG_FILE is defined
         if ( $VDIFF_DIAG_FILE == 'Y' || $VDIFF_DIAG_FILE == 'T' ) set vdfdiagon = 1
      endif
      if ( $vdfdiagon ) then
         setenv VDFF_DIAG $OUTDIR/${EXEC}.VDIFF_DIAG.${OUT_APPL}
         setenv VSED_DIAG $OUTDIR/${EXEC}.VSED_DIAG.${OUT_APPL}
      endif

#> this is for inline biogenic emissions *.q
      set MONTH = `printf "%2.2d\n" $cur_month`
      set day = $cur_day
    
      set EMISDATE = `printf "%4d%2.2d%2.2d\n" ${year} $cur_month $cur_day`

#> inline biogenic emissions processing
      set biogon = 1
      if ( $?CTM_BIOGEMIS ) then     # $CTM_BIOGEMIS is defined
         if ( $CTM_BIOGEMIS == 'N' || $CTM_BIOGEMIS == 'F' ) set biogon = 0
      endif

      if ( $biogon ) then
         set    GSPROpath   = ${INPUT}
         setenv GSPRO         $GSPROpath/gspro_cb05soa_notoxics_cmaq_poc_09nov2007.txt
         set    IN_BEISpath = ${INPUT_Beis}
#        setenv B3GRD         $IN_BEISpath/b3grd.smoke30_beis340.12US1_459X299.080112.ncf
         setenv B3GRD  ${INPUT_Beis}/b3grd.smoke30_beis361.12US1.BELD4.1_MARC_BASE.ncf
         setenv BIOG_SPRO     B10C5 # speciation profile to use for biogenics
         if ( $BIOSW_YN == Y || $BIOSW_YN == T ) then
#           setenv BIOSEASON $IN_BEISpath/bioseason.cmaq.2011_12US1_wetland100.ghrsst.ncf
#           setenv BIOSEASON /work/MOD3EVAL/css/met_reanalysis/narr_raw/bioseason_NARR_US_459x299_${cur_year}.ioapi
            setenv BIOSEASON $INPUT/bioseason.cmaq.2011_12US1_wetland100.ghrsst.ncf
         endif
#        set APPL = ${year}${MONTH}${start_day}

#> Biogenic NO soil input file
         if ( $today == $firstday ) then
#           setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${CFG}_${firstday}
            setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${firstday}
         else
#           setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${CFG}_${yesterday}
            setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${yesterday}
         endif
         setenv INITIAL_RUN N
         if ( ! -f $SOILINP ) then
            setenv INITIAL_RUN Y    # non-existent or not using SOILINP [N|F]; default uses SOILINP
         endif

         if ( $?B3GTS_DIAG ) then     # $CTM_BIOGEMIS is defined
            if ( $B3GTS_DIAG == 'Y' || $B3GTS_DIAG == 'T' ) then
               setenv B3GTS_S $OUTDIR/$EXEC"_B3GTS_S".${CTM_APPL}
            endif
         endif

#> Biogenic NO soil output file
         setenv SOILOUT $OUTDIR/$EXEC"_SOILOUT".${CTM_NEXT}
      endif   # biogon

#> output files
                                                       # link to FILES_CTM.EXT names
      set CONCfile  = $EXEC"_CONC".${OUT_APPL}         # CTM_CONC_1
      set ACONCfile = $EXEC"_ACONC".${OUT_APPL}        # CTM_ACONC_1
#     set VCONCfile = $EXEC"_VCONC".${OUT_APPL}        # CTM_VCONC
      set CGRIDfile = $EXEC"_CGRID".${CTM_NEXT}        # CTM_CGRID_1
      set MEDfile   = $EXEC"_MEDIA_CONC".${OUT_APPL}   # MEDIA_CONC       diag
      set DD1file   = $EXEC"_DRYDEP".${OUT_APPL}       # CTM_DRY_DEP_1
      set DV1file   = $EXEC"_DEPV".${OUT_APPL}         # CTM_DEPV_DIAG    diag
      set PT1file   = $EXEC"_PT3D".${OUT_APPL}         # CTM_PT3D_DIAG    diag
      set BIO1file  = $EXEC"_B3GTS_S".${OUT_APPL}      # B3GTS_S          diag
      set SOIL1file = $EXEC"_SOILOUT".${CTM_NEXT}      # SOILOUT
      set WD1file   = $EXEC"_WETDEP1".${OUT_APPL}      # CTM_WET_DEP_1
      set WD2file   = $EXEC"_WETDEP2".${OUT_APPL}      # CTM_WET_DEP_2    diag
 #    set AV1file   = $EXEC"_AEROVIS".${OUT_APPL}      # CTM_VIS_1
      set AV1file   = $EXEC"_PMVIS".${OUT_APPL}        # CTM_VIS_1
      set AV2file   = $EXEC"_APMVIS".${OUT_APPL}       # CTM_AVIS_1
 #    set AD1file   = $EXEC"_AERODIAM".${OUT_APPL}     # CTM_DIAM_1       diag
      set AD1file   = $EXEC"_PMDIAG".${OUT_APPL}       # CTM_PMDIAG_1     diag
      set AD2file   = $EXEC"_APMDIAG".${OUT_APPL}      # CTM_APMDIAG_1    diag
      set RJ1file   = $EXEC"_PHOTDIAG1".${OUT_APPL}    # CTM_RJ_2         diag
      set RJ2file   = $EXEC"_PHOTDIAG2".${OUT_APPL}    # CTM_RJ_2         diag
      set SSEfile   = $EXEC"_SSEMIS".${OUT_APPL}       # CTM_SSEMIS_1     diag
      set DSEfile   = $EXEC"_DUSTEMIS".${OUT_APPL}     # CTM_DUST_EMIS_1  diag
      set PA1file   = $EXEC"_PA_1".${OUT_APPL}         # CTM_IPR_1
      set PA2file   = $EXEC"_PA_2".${OUT_APPL}         # CTM_IPR_2
      set PA3file   = $EXEC"_PA_3".${OUT_APPL}         # CTM_IPR_3
      set IRR1file  = $EXEC"_IRR_1".${OUT_APPL}        # CTM_IRR_1
      set IRR2file  = $EXEC"_IRR_2".${OUT_APPL}        # CTM_IRR_2
      set IRR3file  = $EXEC"_IRR_3".${OUT_APPL}        # CTM_IRR_3
#     set PG1file   = $EXEC"_PING".${OUT_APPL}         # CTM_PING_1
#     set PGDfile   = $EXEC"_PING_ADIAM".${OUT_APPL}   # CTM_PING_DIAM_1
#     set PGWfile   = $EXEC"_PING_DDEP".${OUT_APPL}    # CTM_PING_DDEP_1
      set DVMfile   = $EXEC"_DEPVFST".${OUT_APPL}      # CTM_DEPV_FST
      set DVFfile   = $EXEC"_DEPVMOS".${OUT_APPL}      # CTM_DEPV_MOS
      set DDFfile   = $EXEC"_DDFST".${OUT_APPL}        # CTM_DRY_DEP_FST
      set DDMfile   = $EXEC"_DDMOS".${OUT_APPL}        # CTM_DRY_DEP_MOS
#     set MEDIAfile = $EXEC"_MEDIA_CONC".${OUT_APPL}   # BIDI SOIL NH4 and H+
      set VDFfile   = $EXEC"_VDIFF_DIAG".${OUT_APPL}   # CTM_VDIFF_DIAG   diag
      set VSDfile   = $EXEC"_VSED_DIAG".${OUT_APPL}    # CTM_VSED_DIAG    diag

      set AODfile   = $EXEC"_AOD_DIAG".${OUT_APPL}     # CTM_AOD_1        diag

      unset echo
  #   source $BASE/outck.q
  #   source $BASE/outck.q.stnd   # master
      source $OCK
      set echo

#>    set floor file (neg concs)

#     setenv FLOOR_FILE $BASE/FLOOR_${CTM_APPL}
      setenv FLOOR_FILE FLOOR_${CTM_APPL}

#> stop if previous PE log files exist
#     set test = `ls CTM_LOG_???.${CTM_APPL}`
#     if ( "$test" != "" ) then

      set logs = `/bin/ls $output_direct_name/CTM_LOG_*.${CTM_APPL}`
      if ( $#logs ) then
         if ( $DISP == 'delete' ) then
            echo " ancillary log files being deleted"
            foreach file ( $logs )
               echo " deleting $file"
               /bin/rm $file
            end
         else
            echo "*** don't overwrite existing PE log files"
            exit 1
         endif
      endif

##> Windblown Dust
      set wbduston = 1
      if ( $?CTM_WB_DUST ) then   # $CTM_WB_DUST is defined
         if ( $CTM_WB_DUST == 'N' || $CTM_WB_DUST == 'F' ) set wbduston = 0
      endif

      if ( $wbduston ) then

         set aglandon = 1
         if ( $?CTM_ERODE_AGLAND ) then   # $CTM_ERODE_AGLAND is defined
            if ( $CTM_ERODE_AGLAND == 'N' || $CTM_ERODE_AGLAND == 'F' ) set aglandon = 0
         endif

         if ( $aglandon ) then
            setenv CROPMAP01 $COT/$domain/BeginPlanting_12km
            setenv CROPMAP04 $COT/$domain/EndPlanting_12km
            setenv CROPMAP08 $COT/$domain/EndHarvesting_12km
         endif

         setenv DUST_LU_1 $COT/beld3_12US1_459X299_output_a.ncf
#        setenv DUST_LU_2 $COT/beld3_12US1_459X299_output_tot.ncf
#        setenv DUST_LU_2 /work/MOD3DEV/yoj/data/beld4_12US1_459X299_output_tot.ncf # Jesse's
         setenv DUST_LU_2 /work/MOD3DEV/yoj/data/beld3_12US1_459X299__tot.ncf      # George's
#> MODIS fpar (current date - 2011)
         setenv MODIS_FPAR $HFOR/modis_fpar_lai_12km_20101201_20111231_daily_ioapi.ncf

#> MODIS fpar (climatological - 10 yr avg)
#        setenv MODIS_FPAR $HFOR/modis_fpar_lai_12km_10yrAvg_daily_ioapi.ncf
 
      endif

#> lightning NOx
      set ltngon = 0
      if ( $?CTM_LTNG_NO ) then   # $CTM_LTNG_NO is defined
         if ( $CTM_LTNG_NO == 'Y' || $CTM_LTNG_NO == 'T' ) set ltngon = 1
      endif

      if ( $ltngon ) then
#> file (offline)
         set    IN_LTpath = /work/MOD3EVAL/dkj/LTNG/WRF37/LTNG_Ratio
         set    IN_LTpath = /home/dkj/LTNG/base/input
#        set    IN_LTpath = /work/MOD3EVAL/wtt/CMAQ_v51_Dev/LTNG/2011/LTNOX 
#        setenv LTNGNO $IN_LTpath/LTNG_RATIO.${year}.${MONTH}.ioapi
#> inline
         setenv LTNGNO "InLine" 
         setenv LTNGPARAM Y #> use lightning parameter file? [ Y|T ]
#> point to lightning parameter file (ignored if LTNGPARAM is [ N|F]
#        set    IN_LTpath = /work/MOD3EVAL/wtt/CMAQ_v51_Dev/LTNG/2011/LTNOX
#        setenv LTNGPARM_FILE $IN_LTpath/LTNG_RATIO.${year}.${MONTH}.ioapi 
#        setenv LTNGOUT $OUTDIR/${EXEC}"_"${CFG}.LTNGDIAG.${APPL}
#        unsetenv LTNGPARAM
#        if ( ! -e $LTNGNO ) aget -a $IN_LTpath /asm2/MOD3EVAL/LNOx/emisLNOx/2004af/36US1/pnox3d.t$EMISDATE
         setenv USE_NLDN Y #> use hourly NLDN LING STRIKE file? [ Y|T ]
         set NLDN_LTpath = /work/MOD3EVAL/dkj/LTNG/NLDN_12US
         setenv LTNGOUT1 $OUTDIR/${EXEC}"_LTNGDIAG1".${OUT_APPL}
         setenv LTNGOUT2 $OUTDIR/${EXEC}"_LTNGDIAG2".${OUT_APPL}
         if ( $USE_NLDN == 'Y' ) then
            setenv LTNGPARM_FILE $NLDN_LTpath/NLDN.12US1.${today}.ioapi
         else
            setenv SCALE_FACTOR 2.0 #> adjust the summer large RC values for log scale
         endif
         setenv LTNGPARMS_FILE $IN_LTpath/LTNG_AllParms_12US1.ncf
      endif

      setenv CSQY_DATA $NML/CSQY_DATA_${MECH}
#     setenv OPTICS_DATA $NML/PHOT_OPTICS.dat
      setenv OPTICS_DATA $INPUT/PHOT_OPTICS.dat
      if (! (-e $CSQY_DATA ) ) then
         echo " $CSQY_DATA  not found "
         exit 1
      endif

      set OCEANfile = 12US1_surf.ncf
      setenv OCEAN_1 $OCEANpath/$OCEANfile

      set pt3don = 1
      if ( $?CTM_PT3DEMIS ) then   # $CTM_PT3DEMIS is defined
         if ( $CTM_PT3DEMIS == 'N' || $CTM_PT3DEMIS == 'F' ) then
            set pt3don = 0
         endif
      endif

      if ( $pt3don ) then
#> emissions inputs with inline plume rise
         set IN_PTpath = $emis_path1
         set EMISpath  = $emis_path1/model_ready

#        set STKCASE = 12US1_G73_CB05
#        set CASE    = 12US1_cmaq_cb05_soa_G73_CB05
         set STKCASE = 12US1_G20_CB05E51
         set CASE    = 12US1_cb05e51_G20_CB05E51
	 
         set EMISfile = emis_mole_all_${today}_${CASE}.ncf

         setenv NPTGRPS 5

         setenv STK_GRPS_01 ${emis_path1}/stack_groups/stack_groups_ptnonipm_${STKCASE}.ncf
         setenv STK_GRPS_02 ${emis_path1}/stack_groups/stack_groups_ptegu_${STKCASE}.ncf
         setenv STK_GRPS_03 ${emis_path1}/stack_groups/stack_groups_othpt_${STKCASE}.ncf
         setenv STK_GRPS_04 ${emis_path1}/stack_groups/stack_groups_ptfire_${today}_${STKCASE}.ncf
         setenv STK_GRPS_05 ${emis_path1}/stack_groups/stack_groups_pt_oilgas_${STKCASE}.ncf

         setenv STK_EMIS_01 $IN_PTpath/inline/ptnonipm/inln_mole_ptnonipm_${today}_${CASE}.ncf
         setenv STK_EMIS_02 $IN_PTpath/inline/ptegu/inln_mole_ptegu_${today}_${CASE}.ncf
         setenv STK_EMIS_03 $IN_PTpath/inline/othpt/inln_mole_othpt_${today}_${CASE}.ncf
         setenv STK_EMIS_04 $IN_PTpath/inline/ptfire/inln_mole_ptfire_${today}_${CASE}.ncf
         setenv STK_EMIS_05 $IN_PTpath/inline/pt_oilgas/inln_mole_pt_oilgas_${today}_${CASE}.ncf

         unset echo
         if ( $REP_LAYER_MIN != "0" ) then
            set DATE = $EMISDATE
            @ count = 0
            while ( $count <= $NPROCS )
               if ( $count <= 9 ) then
                  set sub = 0${count}
               else
                  set sub = ${count}
               endif
               @ grp = 1
               while ( $grp <= $NPTGRPS )
                  set file = $OUTDIR/rptlay_0${grp}.${DATE}.${APPL}_${sub}
                  setenv REPRTLAY_0${grp}${sub} $file
                  if ( $DISP == 'delete' ) /bin/rm -f $file
                  @ grp ++
               end
               @ count ++
            end
         endif
         set echo

         setenv LAYP_STDATE $STDATE
         setenv LAYP_STTIME $STTIME
         setenv LAYP_NSTEPS $NSTEPS
      else   # inline plume rise off
         set EMISpath = /work/uiy/CA
         set EMISfile = aqm.t06z.$today.emis+fireCA.ncf
      endif

      setenv EMIS_1 $EMISpath/$EMISfile

#>    NH3 bidi
#     set epic_path = /work/MOD3EVAL/css/AQMEII3/EPIC
#     setenv E2C_Soilfile ${epic_path}/2010_epic4CMAQ_soil.nc
#     setenv E2C_Fertfile ${epic_path}/2010_epic4CMAQ_time${today}.nc
#     setenv B4LU_file ${epic_path}/beld4_12US1_459X299_output_a.ncf

      setenv E2C_Soilfile  /work/MOD3EVAL/wtt/CMAQ_v51_Dev/misc/2011_US1_soil.nc
      setenv E2C_Fertfile  /work/MOD3EVAL/wtt/CMAQ_v51_Dev/EPIC_data_12US1/2011_US1_time${EMISDATE}.nc
      setenv B4LU_file     /work/MOD3EVAL/wtt/CMAQ_v51_Dev/BELD/2006_NLCD/beld4_12kmCONUS_2006nlcd.ncf

      setenv E2C_SOIL ${E2C_Soilfile}
      setenv E2C_FERT ${E2C_Fertfile}
      setenv BELD4_LU ${B4LU_file}
      
    # setenv MEDIA_CONC ${MEDfile}

      if ( $today != $firstday ) then
         setenv INIT_MEDC_1 $EXEC"_MEDIA_CONC".${CFG}_$yesterday
      endif

#> MCIP meteorology files 
      set EXTN = ${met_year}${MONTH}${DAY}
      setenv GRID_DOT_2D $METpath/GRIDDOT2D_${EXTN}
      setenv GRID_CRO_2D $METpath/GRIDCRO2D_${EXTN}
      setenv MET_CRO_2D $METpath/METCRO2D_${EXTN}
      setenv MET_CRO_3D $METpath/METCRO3D_${EXTN}
      setenv MET_DOT_3D $METpath/METDOT3D_${EXTN}
      setenv MET_BDY_3D $METpath/METBDY3D_${EXTN}

#> IC/BC
      if ( $today == $firstday ) then
         set GC_ICpath = $ic_path
#        set GC_ICfile = CCTM_v51beta_CGRID.CMAQ_v51_beta_20110113
#        set GC_ICfile = ICON_V5d_profile_12US1
#        set GC_ICfile = ICON.geos2cmaq.20110521.ncf
         set GC_ICfile = ICON_D51a_CMAQ-CONUS_profile
         setenv INIT_MEDC_1
      else
         set GC_ICpath = $OUTPUT_ROOT/$output_direct_name
#        set GC_ICfile = ${EXEC}_CGRID.${CFG}_$yesterday
         set GC_ICfile = ${EXEC}_CGRID.${yesterday}...$PBS_JOBID:r
         setenv INIT_MEDC_1 $EXEC"_MEDIA_CONC".${CFG}_$yesterday
      endif

      # APPL     = v52_restruct
      # CFG      = $APPL
      # EXEC = CCTM_${CFG} = CCTM_v52_restruct
      # GC_ICfile = CCTM_v52_restruct_CGRID.v52_restruct_20110521
      #  actual   = CCTM_v52_restruct_CGRID.20110521...242071
      #           = ${EXEC}_CGRID.${yesterday}...$PBS_JOBID:r

      set GC_BCpath = $bc_path
#     set GC_BCfile = bc_12km_MACC_AQMEII3_${cur_year}${MONTH}.ioapi
#     set GC_BCfile = BCON.geos2cmaq.${year}${MONTH}.ncf
      set GC_BCfile = BCON.geos2cmaq.2011${MONTH}.ncf
 #    set GC_BCfile = BCON_cb05txhg_M_SCAM_12KM_35L_profile # copied from /home/hwo/data/icbcs

#> IC/BC paths

      setenv INIT_GASC_1 $GC_ICpath/$GC_ICfile
      setenv INIT_AERO_1 $INIT_GASC_1
      setenv INIT_NONR_1 $INIT_GASC_1
      setenv INIT_TRAC_1 $INIT_GASC_1
      setenv BNDY_GASC_1 $GC_BCpath/$GC_BCfile
      setenv BNDY_AERO_1 $BNDY_GASC_1
      setenv BNDY_NONR_1 $BNDY_GASC_1
      setenv BNDY_TRAC_1 $BNDY_GASC_1

      set TR_DVpath = $METpath
      set TR_DVfile = $MET_CRO_2D

#     source $INPUT/in_outb.q
#     source $BASE/outck_bidi.q

#> for the run control ...

      setenv CTM_STDATE      $STDATE
      setenv CTM_STTIME      $STTIME
      setenv CTM_RUNLEN      $NSTEPS
      setenv CTM_TSTEP       $TSTEP
      setenv CTM_PROGNAME    $EXEC

# ----- END CMAQ -----

      cd $OUTPUT_ROOT/$output_direct_name

#> mechanism name list files
#     setenv tr_matrix_nml /work/MOD3DEV/yoj/data/MECHS1/trac0/Species_Table_TR_0.nml
      setenv tr_matrix_nml /home/yoj/src/repo/CCTM/MECHS/trac0/Species_Table_TR_0.nml
#     setenv tr_matrix_nml $NML/Species_Table_TR_1.nml
      setenv gc_matrix_nml $NML/GC_$MECH.nml
      setenv ae_matrix_nml $NML/AE_$MECH.nml
      setenv nr_matrix_nml $NML/NR_$MECH.nml
  
#-----------------------------------------------------------------------
# Set up and run WRF-EM executable.
#-----------------------------------------------------------------------

#     ls -l /work/MOD3EVAL/css/AQMEII3/bin/CCTM_${APPL}_$EXEC_ID; size /work/MOD3EVAL/css/AQMEII3/bin/CCTM_${APPL}_$EXEC_ID
#     ls -l /work/MOD3EVAL/css/cmas_downloads/CMAQ502/CMAQv5.0.2/scripts/cctm/BLD_D502a_ut; size /work/MOD3EVAL/wtt/CMAQ_v51_Dev/bin/CCTM_D502a_Linux2_x86_64intel
      unlimit
      limit

#> Executable call for multi PE, configure for your system 

#     set MPI = /usr/local/apps/intel/impi/4.1.0.024/intel64/bin
      
      set MPIRUN = $MPI/mpirun

      unset echo

      date '+Started cctm at %m/%d/%y %H:%M:%S'
      
#     mpirun -tv -v -n $NPROCS $XBASE/$EXEC; exit
      time $MPIRUN -r ssh -np $NPROCS $XBASE/$EXEC
#     time $MPIRUN -np $NPROCS $XBASE/$EXEC

#     time $XBASE/$EXEC

      date '+Completed cctm at %m/%d/%y %H:%M:%S%n'

      set echo

      /bin/mv CTM_LOG_*.${CTM_APPL} $OUTPUT_ROOT/$output_direct_name/$today
      /bin/mv FLOOR*.${CTM_APPL}    $OUTPUT_ROOT/$output_direct_name/$today

      if ( $biogon ) then
         mv $SOILOUT $OUTDIR/$EXEC"_SOILINP".${CTM_NEXT}
         setenv SOILINP $OUTDIR/$EXEC"_SOILINP".${CTM_NEXT}  # Biogenic NO soil input file
         setenv INITIAL_RUN N
      endif

      unset echo
#> set timing output file name extension
      set files = `/bin/ls timing_${NPCOL}x${NPROW}.dat_*`
      if ( $#files ) then
         foreach file ( $files )
            set tid = `echo $file | cut -d"_" -f4`
            if ( $tid == '' ) then
               if ( $?PBS_JOBID ) then
                  /bin/mv $file $today/${file}_$PBS_JOBID:r
               else
                  /bin/mv $file $today/${file}_$$
               endif
            endif
         end
      endif

      set echo
      @ cur_day_j++
      @ pre_day_j++
      if ($pre_day_j > $cur_day_j) then
         @ pre_day_j = $cur_day_j - 1
      endif

    end   # while $cur_day < $cur_month_end_day

  end   # while $cur_month < $cur_end_month

  unset echo
  @ pre_year++
 end

 echo "Hey! We're done!"
